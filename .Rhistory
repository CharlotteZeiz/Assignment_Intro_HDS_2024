select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG2_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_6_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural6fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_classification <- AVG_6_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Large Urban Areas",
mode_classification == 2 ~ "Other Urban Areas",
mode_classification == 3 ~ "Accessible Small Towns",
mode_classification == 4 ~ "Remote Small Towns",
mode_classification == 5 ~ "Accessible Rural",
mode_classification == 6 ~ "Remote Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_6class_mort_year <- AVG_6_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG2_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
View(AVG_6_mort_class_percouncil_peryear)
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_6_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural6fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_6classification <- AVG_6_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Large Urban Areas",
mode_classification == 2 ~ "Other Urban Areas",
mode_classification == 3 ~ "Accessible Small Towns",
mode_classification == 4 ~ "Remote Small Towns",
mode_classification == 5 ~ "Accessible Rural",
mode_classification == 6 ~ "Remote Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_6class_mort_year <- AVG_6_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG2_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural3fold <- mortality_allgeo %>%
inner_join(`CA_rural3fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_3_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural3fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_3classification <- AVG_3_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Urban",
mode_classification == 2 ~ "Intermediate",
mode_classification == 3 ~ "Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_3class_mort_year <- AVG_3_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG2_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
View(avg_3class_mort_year)
View(avg_6class_mort_year)
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_6_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural6fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_6classification <- AVG_6_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Large Urban Areas",
mode_classification == 2 ~ "Other Urban Areas",
mode_classification == 3 ~ "Accessible Small Towns",
mode_classification == 4 ~ "Remote Small Towns",
mode_classification == 5 ~ "Accessible Rural",
mode_classification == 6 ~ "Remote Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_6class_mort_year <- AVG_6_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural3fold <- mortality_allgeo %>%
inner_join(`CA_rural3fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_3_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural3fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_3classification <- AVG_3_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Urban",
mode_classification == 2 ~ "Intermediate",
mode_classification == 3 ~ "Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_3class_mort_year <- AVG_3_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
View(group_3classification)
View(group_3classification)
avg_3class_mort_year %>%
wilcox.test(AVG_mortality_rate ~ mode_classification)
avg_3class_mort_year %>%
wilcox.test(mode_classification ~ AVG_mortality_rate, data = avg_3class_mort_year)
# Perform Kruskal-Wallis test comparing the medians across multiple groups
kruskal_test_result <- kruskal.test(AVG_mortality_rate ~ mode_classification, data = avg_3class_mort_year)
# View the result
kruskal_test_result
# Perform Kruskal-Wallis test comparing the medians across multiple groups
kruskal_test_result <- kruskal.test(AVG_mortality_rate ~ mode_classification, data = avg_6class_mort_year)
# View the result
kruskal_test_result
# 3 fold
kruskal_test_result <- kruskal.test(AVG_mortality_rate ~ mode_classification, data = avg_3class_mort_year)
kruskal_test_result
# 6 fold
kruskal_test_result <- kruskal.test(AVG_mortality_rate ~ mode_classification, data = avg_6class_mort_year)
kruskal_test_result
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(here)
library(readr)
infant_death_all_geo <- read_csv("ScotPHO_infant death all geo.csv")
View(infant_death_all_geo)
mortality_allgeo <- infant_death_all_geo %>%
select(`area_code`, `area_type`, `area_name`, `year`,`measure`) %>%
rename(Year = `year`,
Mortality_rate = `measure`
)
head(mortality_allgeo)
#data for boxplot
mortality_scot_by_council <- mortality_allgeo %>%
select(`area_type`, `area_name`, `Year`,`Mortality_rate`) %>%
filter(`area_type` == "Council area",
`Year` %in% c("2004", "2007", "2010","2013", "2016", "2019")) #every 3 years
mortality_scot_by_council$Year <- as.factor(mortality_scot_by_council$Year) #to help separate boxplots per year in one graph
#boxplot
library(ggplot2)
mortality_scot_by_board %>%
ggplot(aes(x = factor(Year),
y = Mortality_rate,
colour = Year)) +
geom_boxplot() +
geom_jitter(alpha = 0.6) +
theme(legend.position = "none")+
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by council areas (2004-2019)")
library(readr)
library(dplyr)
library(here)
library(readr)
infant_death_all_geo <- read_csv("ScotPHO_infant death all geo.csv")
View(infant_death_all_geo)
mortality_allgeo <- infant_death_all_geo %>%
select(`area_code`, `area_type`, `area_name`, `year`,`measure`) %>%
rename(Year = `year`,
Mortality_rate = `measure`
)
head(mortality_allgeo)
#data for boxplot
mortality_scot_by_council <- mortality_allgeo %>%
select(`area_type`, `area_name`, `Year`,`Mortality_rate`) %>%
filter(`area_type` == "Council area",
`Year` %in% c("2004", "2007", "2010","2013", "2016", "2019")) #every 3 years
mortality_scot_by_council$Year <- as.factor(mortality_scot_by_council$Year) #to help separate boxplots per year in one graph
#boxplot
library(ggplot2)
mortality_scot_by_council %>%
ggplot(aes(x = factor(Year),
y = Mortality_rate,
colour = Year)) +
geom_boxplot() +
geom_jitter(alpha = 0.6) +
theme(legend.position = "none")+
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by council areas (2004-2019)")
library(readr)
rural_class_complete <- read_csv("scottish-government-urban-rural-classification-2020-data-zone-2011-lookup.csv")
View(rural_class_complete)
rural_3fold <- rural_class_complete %>%
select(`DataZone`, `UR3FOLD`) %>%
rename(area_code = `DataZone`,
Classification = `UR3FOLD`
)
rural_6fold <- rural_class_complete %>%
select(`DataZone`, `UR6FOLD`) %>%
rename(area_code = `DataZone`,
Classification = `UR6FOLD`
)
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#read area dataset
library(readr)
area_to_hsc <- read_csv("dz2011_codes_and_labels_21042020.csv")
# connecting area code and hsc for 6 fold
CA_rural6fold <- rural_6fold %>%
inner_join(`area_to_hsc`, by = c("area_code" = "DataZone")) %>%
select(area_code, Classification, CA, HSCP, HB)
library(dplyr)
get_mode <- function(x) {
uniq_x <- unique(x)
uniq_x[which.max(tabulate(match(x, uniq_x)))]
}
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_6_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural6fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_6classification <- AVG_6_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Large Urban Areas",
mode_classification == 2 ~ "Other Urban Areas",
mode_classification == 3 ~ "Accessible Small Towns",
mode_classification == 4 ~ "Remote Small Towns",
mode_classification == 5 ~ "Accessible Rural",
mode_classification == 6 ~ "Remote Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_6class_mort_year <- AVG_6_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
# 6 fold
kruskal_test_result <- kruskal.test(AVG_mortality_rate ~ mode_classification, data = avg_6class_mort_year)
kruskal_test_result
# -->continue with the 6-fold dataset
View(kruskal_test_result)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(here)
library(readr)
infant_death_all_geo <- read_csv("ScotPHO_infant death all geo.csv")
View(infant_death_all_geo)
mortality_allgeo <- infant_death_all_geo %>%
select(`area_code`, `area_type`, `area_name`, `year`,`measure`) %>%
rename(Year = `year`,
Mortality_rate = `measure`
)
head(mortality_allgeo)
#data for boxplot
mortality_scot_by_council <- mortality_allgeo %>%
select(`area_type`, `area_name`, `Year`,`Mortality_rate`) %>%
filter(`area_type` == "Council area",
`Year` %in% c("2004", "2007", "2010","2013", "2016", "2019")) #every 3 years
mortality_scot_by_council$Year <- as.factor(mortality_scot_by_council$Year) #to help separate boxplots per year in one graph
#boxplot
library(ggplot2)
mortality_scot_by_council %>%
ggplot(aes(x = factor(Year),
y = Mortality_rate,
colour = Year)) +
geom_boxplot() +
geom_jitter(alpha = 0.6) +
theme(legend.position = "none")+
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by council areas (2004-2019)")
library(readr)
rural_class_complete <- read_csv("scottish-government-urban-rural-classification-2020-data-zone-2011-lookup.csv")
View(rural_class_complete)
rural_3fold <- rural_class_complete %>%
select(`DataZone`, `UR3FOLD`) %>%
rename(area_code = `DataZone`,
Classification = `UR3FOLD`
)
rural_6fold <- rural_class_complete %>%
select(`DataZone`, `UR6FOLD`) %>%
rename(area_code = `DataZone`,
Classification = `UR6FOLD`
)
#read area dataset
library(readr)
area_to_hsc <- read_csv("dz2011_codes_and_labels_21042020.csv")
# connecting area code and hsc for 6 fold
CA_rural6fold <- rural_6fold %>%
inner_join(`area_to_hsc`, by = c("area_code" = "DataZone")) %>%
select(area_code, Classification, CA, HSCP, HB)
library(dplyr)
get_mode <- function(x) {
uniq_x <- unique(x)
uniq_x[which.max(tabulate(match(x, uniq_x)))]
}
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_6_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural6fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode
group_6classification <- AVG_6_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Large Urban Areas",
mode_classification == 2 ~ "Other Urban Areas",
mode_classification == 3 ~ "Accessible Small Towns",
mode_classification == 4 ~ "Remote Small Towns",
mode_classification == 5 ~ "Accessible Rural",
mode_classification == 6 ~ "Remote Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_6class_mort_year <- AVG_6_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`, `AVG2_mortality_rate`, `mode_classification`) %>%
filter(`Year` %in% c("2004", "2008", "2012", "2016")) %>%
ggplot(aes(x = `mode_classification`, y = `AVG2_mortality_rate`, group = `Year`)) +
geom_col()
View(avg_6class_mort_year)
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`, `AVG_mortality_rate`, `mode_classification`) %>%
filter(`Year` %in% c("2004", "2008", "2012", "2016")) %>%
ggplot(aes(x = `mode_classification`, y = `AVG2_mortality_rate`, group = `Year`)) +
geom_col()
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`, `AVG_mortality_rate`, `mode_classification`) %>%
filter(`Year` %in% c("2004", "2008", "2012", "2016")) %>%
ggplot(aes(x = `mode_classification`, y = `AVG_mortality_rate`, group = `Year`)) +
geom_col()
avg_class_mort_year <- group_classification %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(avg_mortalityrate = mean(avg_mortality_rate, na.rm = TRUE))
library(dplyr)
get_mode <- function(x) {
uniq_x <- unique(x)
uniq_x[which.max(tabulate(match(x, uniq_x)))]
}
# Combine council area, mortality rates and rural-urban classification
combined_mortalityallgeo_rural6fold <- mortality_allgeo %>%
inner_join(`CA_rural6fold`, by = c("area_code" = "CA")) %>%
select(area_type, area_name, Year, Mortality_rate, Classification)
#summarise mortality and classification per area_name and year
AVG_6_mort_class_percouncil_peryear <- combined_mortalityallgeo_rural6fold %>%
group_by(area_name, Year) %>%
summarise(
avg_mortality_rate = mean(Mortality_rate, na.rm = TRUE),
mode_classification = get_mode(Classification) #mode for whole numbers for original categories
)
#create classification categories via mode according to scot public health
group_classification <- AVG_6_mort_class_percouncil_peryear %>%
mutate(mode_classification = case_when(
mode_classification == 1 ~ "Large Urban Areas",
mode_classification == 2 ~ "Other Urban Areas",
mode_classification == 3 ~ "Accessible Small Towns",
mode_classification == 4 ~ "Remote Small Towns",
mode_classification == 5 ~ "Accessible Rural",
mode_classification == 6 ~ "Remote Rural",
TRUE ~ "Unknown"
))
# average mortality rate per classification
avg_6class_mort_year <- AVG_6_mort_class_percouncil_peryear %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(AVG_mortality_rate = mean(avg_mortality_rate, na.rm = TRUE))
#r Perform Kruskal-Wallis test for 3 and 6 fold, include=FALSE}
kruskal_test_result <- kruskal.test(AVG_mortality_rate ~ mode_classification, data = avg_6class_mort_year)
kruskal_test_result
# -->continue with the 6-fold dataset
avg_class_mort_year <- group_classification %>%
select(`Year`,`avg_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification, Year) %>%
summarise(avg_mortalityrate = mean(avg_mortality_rate, na.rm = TRUE))
library(ggplot2)
avg_class_mort_year %>%
select(`Year`,`avg_mortalityrate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= Year, y= avg_mortalityrate, colour = mode_classification))
View(avg_class_mort_year)
View(avg_6class_mort_year)
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= Year, y= avg_mortalityrate, colour = mode_classification) +
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by urban-rural classification (2004-2019)"))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= Year, y= AVG_mortality_rate, colour = mode_classification) +
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by urban-rural classification (2004-2019)"))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= Year, y= AVG_mortality_rate, colour = mode_classification)) +
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by urban-rural classification (2004-2019)")
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot(aes(x= Year, y= AVG_mortality_rate)) +
geom_line(colour = mode_classification)) +
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= Year, y= AVG_mortality_rate, colour = mode_classification) +
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by urban-rural classification (2004-2019)")
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= Year, y= AVG_mortality_rate, colour = mode_classification)) +
labs(x = "Year", y = "Infant mortality rate", title = "Infant mortality rate in Scotland by urban-rural classification (2004-2019)")
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`, colour = `mode_classification`))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`))
View(avg_6class_mort_year)
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(mode_classification) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`))
library(ggplot2)
avg_6class_mort_year %>%
select(`Year`,`AVG_mortality_rate`, `mode_classification`) %>%
group_by(`mode_classification`) %>%
ggplot() +
geom_line(aes(x= `Year`, y= `AVG_mortality_rate`))
